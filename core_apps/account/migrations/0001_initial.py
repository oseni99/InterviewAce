# Generated by Django 5.1 on 2024-08-13 05:11

import core_apps.account.services
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='Email Address')),
                ('first_name', models.CharField(max_length=150, verbose_name='First Name')),
                ('last_name', models.CharField(max_length=150, verbose_name='Last Name')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is Active')),
                ('is_staff', models.BooleanField(default=False, verbose_name='Is Staff')),
                ('resume', models.FileField(upload_to='resumes/', validators=[core_apps.account.services.validate_file], verbose_name='Resume')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Date Joined')),
                ('linkedin_profile', models.URLField(blank=True, null=True, validators=[core_apps.account.services.validate_linkedin_profile], verbose_name='Linkedin Profile')),
                ('github_profile', models.URLField(blank=True, null=True, verbose_name='Github Profile')),
                ('profile_picture', models.ImageField(upload_to='profile_pics', verbose_name='Profile Picture')),
                ('industry_choice', models.CharField(blank=True, max_length=80, null=True, verbose_name='Industry')),
                ('year_of_experience', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='Year of Experience')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
